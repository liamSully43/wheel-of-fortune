{"version":3,"sources":["assets/wheel.png","components/Help.js","components/Menu.js","components/Wheel.js","components/NameField.js","components/MysteryPhrase.js","components/App.js","components/Losers.js","components/EndScreen.js","index.js","assets/wheel_of_fortune_logo.png"],"names":["module","exports","Help","num","document","querySelectorAll","style","height","id","className","onClick","expandField","React","Component","Menu","querySelector","borderColor","webkitAnimation","display","i","alt","src","logo","onKeyPress","this","valueVerify","placeholder","props","startGame","howToPlay","Wheel","currentAngle","playerState","vowels","spin","setTimeout","number","Math","floor","random","webkitTransitionDuration","webkitTransform","degree","playerPoints","message","WheelImage","spinWheel","bind","NameField","name","money","phrases","phraseNames","MysteryPhrase","selectPhrase","y","phraseCharacters","length","classList","remove","arrayNumber","splice","phraseNumber","split","phrase","x","letters","word","createElement","elements","key","push","guess","e","add","mysteryPhrase","playerIndex","App","updatePhrase","characters","setState","guessedCharacters","updateMessage","checkAnswer","event","vowel","showVowels","which","value","paidFor","toUpperCase","state","mon","selectedMoney","correctGuess","refs","u","consonant","freePlay","revealCharacters","visibleLetters","contains","playerChange","endGame","currentPlayer","players","changePoints","points","isNaN","time","b","setInterval","clearInterval","expand","width","v","selectVowel","ref","Losers","generateLosers","loser","EndScreen","names","player","element","shift","map","positions","playerNames","namesString","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.12f508c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wheel.4fb2415c.png\";","import React from 'react';\r\n\r\nclass Help extends React.Component {\r\n\t\r\n\texpandField(num) {\r\n\t\tif(document.querySelectorAll(\".menu-help-content-titles\")[num].style.height === \"auto\") {\r\n\t\t\tdocument.querySelectorAll(\".menu-help-content-titles\")[num].style.height = \"40px\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.querySelectorAll(\".menu-help-content-titles\")[num].style.height = \"auto\";\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"menu-help\">\r\n\t\t\t\t<h1 id=\"menu-help-title\">How to play</h1>\r\n\t\t\t\t<div id=\"menu-help-content\">\r\n\t\t\t\t\t<div className=\"menu-help-content-titles\" onClick={() => {this.expandField(0)}}>\r\n\t\t\t\t\t\t<h3>The Main Goal</h3>\r\n\t\t\t\t\t\t<p>The main goal for contestants is to reach $25,000, the first contestant to do this comes first with the other players following them in decending order of money. Contestants can earn money with correct guesses, each correct letter guess is worth the ammount of money they landed on and correct word guesses are worth $1000 unless the contestant landed on $5000.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"menu-help-content-titles\" onClick={() => {this.expandField(1)}}>\r\n\t\t\t\t\t\t<h3>Spining vs Guessing</h3>\r\n\t\t\t\t\t\t<p>Contestants will get to spin the wheel and after they have span they will then be able to guess a letter or word, if the guess is correct they can then spin again before guessing another letter or word. However, if they are wrong they will lose their turn.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"menu-help-content-titles\" onClick={() => {this.expandField(2)}}>\r\n\t\t\t\t\t\t<h3>Consonants & Vowels</h3>\r\n\t\t\t\t\t\t<p>Consonants are free to guess and will reward the player with the money they landed on for each guessed consonant in the word, vowels however cost $250 each but will only charge the player once event if the vowel appears multiple times in a word.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"menu-help-content-titles\" onClick={() => {this.expandField(3)}}>\r\n\t\t\t\t\t\t<h3>Wheel Segments</h3>\r\n\t\t\t\t\t\t<p><strong>Bankrupt - </strong> If a contestant lands on Bankrupt then they will lose all of their winings and lose their turn.</p>\t\r\n\t\t\t\t\t\t<p><strong>Lose A Turn - </strong> If a contestant lands on Lose A Turn then they will just lose their turn.</p>\r\n\t\t\t\t\t\t<p><strong>Fee Play - </strong> If a contestant lands on Free Play then they get a free guess, the player won't win any money from a correct guess but won't lose a turn for an incorrect guess. Vowels are also free when landing on Free Play.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Help;","import React from 'react';\r\nimport logo from '../assets/wheel_of_fortune_logo.png';\r\nimport Help from './Help';\r\n\r\nclass Menu extends React.Component {\r\n\t\r\n\tvalueVerify() {\r\n\t\tvar colour = document.querySelector(\".menu-name-input\").style.borderColor;\r\n\t\tif(colour === \"rgb(255, 0, 0)\"){\r\n\t\t\tdocument.querySelector(\".menu-name-input\").style.webkitAnimation = \"incorrect-name-field-reverse 1s\"\r\n\t\t\tdocument.querySelector(\".menu-name-input\").style.borderColor = \"#fff\";\r\n\t\t}\r\n\t}\r\n\t\r\n\thowToPlay() {\r\n\t\tvar display = document.querySelector(\"#menu-help\").style.display;\r\n\t\tif (display === \"\") {\r\n\t\t\tdocument.querySelector(\"#menu-help\").style.display = \"none\";\r\n\t\t\tdisplay = document.querySelector(\"#menu-help\").style.display;\r\n\t\t}\r\n\t\tif(display === \"none\") {\r\n\t\t\tfor(var i = 0; 4 > i; i++) {\r\n\t\t\t\tdocument.querySelectorAll(\".menu-name-input\")[i].style.display = \"none\";\r\n\t\t\t}\r\n\t\t\tdocument.querySelector(\"#menu-help\").style.display = \"block\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor(i = 0; 4 > i; i++) {\r\n\t\t\t\tdocument.querySelectorAll(\".menu-name-input\")[i].style.display = \"block\";\r\n\t\t\t}\r\n\t\t\tdocument.querySelector(\"#menu-help\").style.display = \"none\";\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"background\"></div>\r\n\t\t\t\t<div id=\"menu\">\r\n\t\t\t\t\t<img id=\"menu-title-logo\" alt=\"The wheel of fortune logo\" src={logo} />\r\n\t\t\t\t\t<div id=\"menu-names-container\">\r\n\t\t\t\t\t\t<Help />\r\n\t\t\t\t\t\t<input className=\"menu-name-input\" onKeyPress={this.valueVerify} placeholder=\"Player 1\" />\r\n\t\t\t\t\t\t<input className=\"menu-name-input\" placeholder=\"Player 2\" />\r\n\t\t\t\t\t\t<input className=\"menu-name-input\" placeholder=\"Player 3\" />\r\n\t\t\t\t\t\t<input className=\"menu-name-input\" placeholder=\"Player 4\" />\r\n\t\t\t\t\t\t<button className=\"universal-buttons\" onClick={this.props.startGame}>Start</button>\r\n\t\t\t\t\t\t<button className=\"universal-buttons\" onClick={this.howToPlay} >How to play</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport WheelImage from '../assets/wheel.png';\r\n\r\nclass Wheel extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.currentAngle = 0;\r\n\t}\r\n\r\n\tspinWheel() {\r\n\t\tif(this.props.playerState) {\r\n\t\t\tthis.props.vowels();\r\n\t\t\tthis.props.spin(null);\r\n\t\t\tsetTimeout(() => {this.props.spin(false)}, 3000);\r\n\t\t\tvar number = Math.floor(Math.random() * 360 + 1080);\r\n\t\t\tthis.currentAngle += number;\r\n\t\t\tdocument.querySelector(\"#wheel\").style.webkitTransitionDuration = \"3s\";\r\n\t\t\tdocument.querySelector(\"#wheel\").style.webkitTransform = \"rotate(\" + this.currentAngle + \"deg)\";\r\n\t\t\tvar degree = this.currentAngle % 360;\r\n\t\t\tswitch(true){\t\t\t\r\n\t\t\t\tcase (degree <= 15): this.props.playerPoints(5000);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 30): this.props.playerPoints(\"Bankrupt\");\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 45): this.props.playerPoints(300);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 60): this.props.playerPoints(500);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 75): this.props.playerPoints(450);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 90): this.props.playerPoints(500);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 105): this.props.playerPoints(800);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 120): this.props.playerPoints(\"Lose A Turn\");\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 135): this.props.playerPoints(700);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 150): this.props.playerPoints(\"Free Play\"); setTimeout(() => {this.props.message(\"Free Play will give you immunity from incorrect guesses of either letters or words, as well as the option to buy a vowel for free\")}, 3000);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 165): this.props.playerPoints(650);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 180): this.props.playerPoints(\"Bankrupt\");\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 195): this.props.playerPoints(900);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 210): this.props.playerPoints(500);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 224): this.props.playerPoints(350);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 240): this.props.playerPoints(600);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 255): this.props.playerPoints(500);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 270): this.props.playerPoints(400);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 285): this.props.playerPoints(550);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 300): this.props.playerPoints(800);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 315): this.props.playerPoints(300);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 330): this.props.playerPoints(700);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree <= 345): this.props.playerPoints(900);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree < 360): this.props.playerPoints(500);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase (degree = 360): this.props.playerPoints(5000);\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault: this.props.playerPoints(\"Error\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.props.message(\"The wheel has already been span, please guess a letter or word\");\r\n\t\t}\r\n\t};\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div id=\"wheel-container\">\r\n\t\t\t\t<div id=\"app-wheel-pointer\" />\r\n\t\t\t\t<img src={WheelImage} onClick={this.spinWheel.bind(this)} id=\"wheel\" alt=\"The Wheel of fortune\" />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Wheel;","import React from 'react';\r\n\r\nclass NameField extends React.Component {\r\n\trender() {\r\n\t\treturn \t<p className=\"app-right-containers\"><span>Player: {this.props.name} <br />${this.props.money}</span></p>\r\n\t}\r\n}\r\n\r\nexport default NameField;","import React from 'react';\r\nimport NameField from './NameField';\r\n\r\nvar phrases = [\r\n/* Around The House */\t\t\t[\"FRIDGE FREEZER\", \"SHOWER CURTAIN\", \"TELEVISION SET\", \"KETTLE\", \"LAMP SHADE\", \"LEAF BLOWER\", \"DESK\", \"WARDROBE\", \"RADIATOR COVER\", \"LAWN CHAIR\"],\r\n/* TV & Movies */\t\t\t\t[\"THE WOLF OF WALL STREET\", \"MISSION IMPOSSIBLE\", \"DUMB AND DUMBER\", \"ONCE UPON A TIME IN HOLLYWOOD\", \"THE AVENGERS\", \"FRIENDS\", \"IT'S ALWAYS SUNNY IN PHILADELPHIA\", \"THE OFFICE\", \"STRANGER THINGS\", \"GAME OF THRONES\"],\r\n/* People & Characters */\t\t[\"SHERLOCK HOLMES\", \"TOM HANKS\", \"BATMAN\", \"AARON PAUL\", \"JAMES BOND\", \"WILL SMITH\", \"JESSICA JONES\", \"IDRIS ELBA\", \"KATNISS EVERDEEN\", \"DAME JUDI DENCH\"],\r\n/* Music */\t\t\t\t\t\t[\"QUEEN\", \"BOHEMIAN RHAPSODY\", \"KANYE\", \"TAYLOR SWIFT\", \"SMELLS LIKE TEEN SPIRIT\", \"HEY JUDE\", \"BAD GUY\", \"HAPPY\", \"ED SHEERAN\", \"LADY GAGA\"],\r\n/* Landmarks */\t\t\t\t\t[\"THE EIFFEL TOWER\", \"THE GREAT BARRIER REEF\", \"BIG BEN\", \"THE STATUE OF LIBERTY\", \"THE GREAT WALL OF CHINA\", \"THE GREAT PYRAMIDS OF EGYPT\", \"THE LEANING TOWER OF PISA\", \"CENTRAL PARK\", \"THE NIAGARA FALLS\", \"THE MOSCOW KREMLIN\"],\r\n/* History */\t\t\t\t\t[\"THE MOON LANDING\", \"THE BLACK PLAGUE\", \"NOTRE DAME DE PARIS FIRE\", \"THE GREAT DEPRESSION\", \"WORLD WAR TWO\", \"THE FALL OF THE BERLIN WALL\", \"CHERNOBYL DISASTER\", \"GULF WAR\", \"THE GREAT FIRE OF LONDON\", \"COLD WAR\"]\r\n];\r\nvar phraseNames = [\"Around the House\", \"TV & Movies\", \"People & Characters\", \"Music\", \"Landmarks\", \"History\"];\r\n\r\nclass MysteryPhrase extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.arrayNumber = Math.floor(Math.random() * 6);\r\n\t\tthis.phraseNumber = Math.floor(Math.random() * 10);\r\n\t\tthis.phraseCharacters = phrases[this.arrayNumber][this.phraseNumber].split(\"\");\r\n\t\tthis.props.phrase(phrases[this.arrayNumber][this.phraseNumber], this.phraseCharacters);\r\n\t\tthis.phrases = phrases;\r\n\t}\r\n\tselectPhrase = () => {\r\n\t\tfor(var y = 0; this.phraseCharacters.length > y; y++) {\r\n\t\t\tdocument.querySelectorAll(\".app-letters\")[y].classList.remove(\"app-visible-letters\");\r\n\t\t}\r\n\t\tphrases[this.arrayNumber].splice(this.phraseNumber, 1);\r\n\t\tif(phrases[this.arrayNumber].length === 0) {\r\n\t\t\tphrases.splice(this.arrayNumber, 1);\r\n\t\t\tphraseNames.splice(this.arrayNumber, 1);\r\n\t\t}\r\n\t\tthis.arrayNumber = Math.floor(Math.random() * phrases.length);\r\n\t\tthis.phraseNumber = Math.floor(Math.random() * phrases[this.arrayNumber].length);\r\n\t\tthis.phraseCharacters = phrases[this.arrayNumber][this.phraseNumber].split(\"\");\r\n\t\tthis.props.phrase(phrases[this.arrayNumber][this.phraseNumber], this.phraseCharacters);\r\n\t}\r\n\t\r\n\tmysteryPhrase() {\r\n\t\tvar x = <p></p>;\r\n\t\tvar letters = [];\r\n\t\tvar word = React.createElement('div', {className: \"app-words\"}, []);\r\n\t\tvar elements = [];\r\n\t\tfor (var i=0; this.phraseCharacters.length > i; i++) {\r\n\t\t\tif(this.phraseCharacters[i] === \" \") {\r\n\t\t\t\tx = <p key={i} className=\"app-visible-letters app-letters\">{this.phraseCharacters[i]}</p>;\r\n\t\t\t\tletters.push(x);\r\n\t\t\t\tword = React.createElement('div', {className: \"app-words\", key: i}, letters);\r\n\t\t\t\tletters = [];\r\n\t\t\t\telements.push(word);\r\n\t\t\t}\r\n\t\t\telse if(this.phraseCharacters[i] === \"'\") {\r\n\t\t\t\tx = <p key={i} className=\"app-visible-letters app-letters\">{this.phraseCharacters[i]}</p>;\r\n\t\t\t\tletters.push(x);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tx = <p key={i} className=\"app-hidden-letters app-letters\">{this.phraseCharacters[i]}</p>;\r\n\t\t\t\tletters.push(x);\r\n\t\t\t}\r\n\t\t}\r\n\t\tword = React.createElement('div', {className: \"app-words\", key: i}, letters);\r\n\t\tletters = [];\r\n\t\telements.push(word);\r\n\t\treturn elements;\r\n\t}\r\n\t\r\n\trevealCharacters(guess) {\r\n\t\tfor(var e = 0; this.phraseCharacters.length > e; e++) {\r\n\t\t\tif(this.phraseCharacters[e] === guess) {\r\n\t\t\t\tdocument.querySelectorAll(\".app-letters\")[e].classList.add(\"app-visible-letters\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"app-right-container\">\r\n\t\t\t\t<NameField name={this.props.name} money={this.props.money} />\r\n\t\t\t\t<div className=\"app-right-containers\">\r\n\t\t\t\t\t<div id=\"app-mystery-phrase-cover\" />\r\n\t\t\t\t\t<span id=\"app-mystery-phrase-container\">{this.mysteryPhrase()}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"app-right-containers\" onClick={this.selectPhrase}><span>{phraseNames[this.arrayNumber]}</span></p>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default MysteryPhrase;","import React from 'react';\r\nimport Wheel from './Wheel';\r\nimport MysteryPhrase from './MysteryPhrase';\r\nimport players from \".././index\";\r\n\r\nvar playerIndex = 0;\r\nvar player1Points = 0;\r\nvar player2Points = 0;\r\nvar player3Points = 0;\r\nvar player4Points = 0;\r\nvar playerPoints = [player1Points, player2Points, player3Points, player4Points];\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {money: 0, selectedMoney: 0, phrase: \"\", message: \"\"};\r\n\t\tthis.currentPlayer = players[playerIndex];\r\n\t\tthis.freePlay = false;\r\n\t\tthis.spin = true;\r\n\t\tthis.phraseCharacters = [];\r\n\t\tthis.guessedCharacters = [];\r\n\t\tthis.playerChange = this.playerChange.bind(this);\r\n\t\tthis.changePoints = this.changePoints.bind(this);\r\n\t}\r\n\t\r\n\tplayerChange() {\r\n\t\tthis.spin = true;\r\n\t\tplayerIndex++;\r\n\t\tif(playerIndex === players.length){\r\n\t\t\tplayerIndex = 0;\r\n\t\t}\r\n\t\tthis.setState({message: \"Unlucky, \" + players[playerIndex] + \" you're up!\"});\r\n\t\tsetTimeout(() => {this.setState({message: \"\"})}, 3000);\r\n\t\tthis.currentPlayer = players[playerIndex];\r\n\t\tthis.setState({money: playerPoints[playerIndex]});\r\n\t}\r\n\t\r\n\tchangePoints(points) {\r\n\t\tif (!isNaN(points)){\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.setState({selectedMoney: points});\r\n\t\t\t}, 3000);\r\n\t\t}\r\n\t\telse if(points === \"Bankrupt\") {\r\n\t\t\tvar time = 0;\r\n\t\t\tif(playerPoints[playerIndex] < 2000) {\r\n\t\t\t\ttime = 20;\r\n\t\t\t}\r\n\t\t\telse if (playerPoints[playerIndex] < 6000) {\r\n\t\t\t\ttime = 10;\r\n\t\t\t}\r\n\t\t\telse if (playerPoints[playerIndex] < 10000){\r\n\t\t\t\ttime = 5;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttime = 1;\r\n\t\t\t}\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.setState({selectedMoney: 0});\r\n\t\t\t\tvar b = setInterval(() => {\r\n\t\t\t\t\tif(this.state.money <= 0) {\r\n\t\t\t\t\t\tclearInterval(b);\r\n\t\t\t\t\t\tsetTimeout(() => {this.playerChange(); this.spin = true}, 500);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(playerPoints[playerIndex] >= 10) {\r\n\t\t\t\t\t\tplayerPoints[playerIndex] -= 10;\r\n\t\t\t\t\t\tthis.setState({money: playerPoints[playerIndex]});\r\n\t\t\t\t\t}\r\n\t\t\t\t}, time);\r\n\t\t\t\tthis.spin = null;\r\n\t\t\t}, 3000);\r\n\t\t}\r\n\t\telse if(points === \"Lose A Turn\") {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.setState({selectedMoney: 0});\r\n\t\t\t\tthis.spin = true;\r\n\t\t\t\tthis.playerChange();\r\n\t\t\t}, 3000);\r\n\t\t}\r\n\t\telse if(points === \"Error\") {\r\n\t\t\tthis.setState({message: \"Error occured, spin again\"});\r\n\t\t\tsetTimeout(() => {this.setState({message: \"\"})}, 5000);\r\n\t\t\tthis.setState({selectedMoney: 0});\r\n\t\t\tthis.spin = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.freePlay = true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tupdatePhrase = (phrase, characters) => {\r\n\t\tthis.setState({phrase: phrase});\r\n\t\tthis.phraseCharacters = characters;\r\n\t\tthis.guessedCharacters = [];\r\n\t}\r\n\t\r\n\t//this is used to update the message from events outside of the App component\r\n\tupdateMessage = message => {\r\n\t\tthis.setState({message: message});\r\n\t\tsetTimeout(() => {this.setState({message: \"\"})}, 3000);\r\n\t}\r\n\t\r\n\tcheckAnswer = (event, vowel) => {\r\n\t\tthis.showVowels(false);\r\n\t\tvar guess = \"\";\r\n\t\t// checks if guess should be submitted\r\n\t\tif(event.which === 13) {\r\n\t\t\tif(this.spin) {\r\n\t\t\t\tthis.setState({message: \"Please spin the wheel before making a guess\"});\r\n\t\t\t\tsetTimeout(() => {this.setState({message: \"\"})}, 3000);\r\n\t\t\t}\r\n\t\t\telse if(this.spin === null) {\r\n\t\t\t\tthis.setState({message: \"Please wait for the current action to complete before continuing\"});\r\n\t\t\t\tsetTimeout(() => {this.setState({message: \"\"})}, 3000);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar x = document.querySelector(\"#app-guess-input\").value;\r\n\t\t\t\tvar paidFor = false;\r\n\t\t\t\tif (vowel) { //checks if the enter key is pressed or if vowel was selected via the buttons\r\n\t\t\t\t\tx = vowel;\r\n\t\t\t\t\tpaidFor = true;\r\n\t\t\t\t}\r\n\t\t\t\tguess = x.toUpperCase();\r\n\t\t\t\tif(guess.length > 1) { //checks if guess is a word or a letter\r\n\t\t\t\t\tif(guess === this.state.phrase) { //checks if guess is correct\r\n\t\t\t\t\t\tvar mon = this.state.selectedMoney\r\n\t\t\t\t\t\tif(mon < 1000) {\r\n\t\t\t\t\t\t\tmon = 1000;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tplayerPoints[playerIndex] += mon;\r\n\t\t\t\t\t\tthis.setState({money: playerPoints[playerIndex]});\r\n\t\t\t\t\t\tvar correctGuess = true;\r\n\t\t\t\t\t\tthis.refs.mysteryPhrase.selectPhrase();\r\n\t\t\t\t\t\tthis.setState({message: \"Correct!\"});\r\n\t\t\t\t\t\tif(playerPoints[playerIndex] < 1000) { //this is required for the end screen, changing the message state after the end screen shows prints an error to the console\r\n\t\t\t\t\t\t\tsetTimeout(() => {this.setState({message: \"\"})}, 3000);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar letters = document.querySelectorAll(\".app-letters\");\r\n\t\t\t\t\t\tfor(var u = 0; letters.length > u; u++) {\r\n\t\t\t\t\t\t\tletters[u].classList.remove(\"app-visible-letters\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {//sets the guess to incorrect\r\n\t\t\t\t\t\tcorrectGuess = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse { //this is the path if the guess is only a single character/letter\r\n\t\t\t\t\tif (guess === \"A\" || guess === \"I\" || guess === \"O\" || guess === \"U\" || guess === \"E\") { //checks if guess is a vowel, if so it will set consonant to true or false on that basis\r\n\t\t\t\t\t\tvar consonant = false; //var vowel had already been defined\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsonant = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!this.freePlay && !consonant && !paidFor) {//this checks if the vowel guessed had beem paid for or not (paid for if selected via buttons) and if free play has been landed on\r\n\t\t\t\t\t\tthis.setState({message: \"Vowels must be purchased using the button above\"});\r\n\t\t\t\t\t\tthis.spin = false;\r\n\t\t\t\t\t\tsetTimeout(() => {this.setState({message: \"\"})}, 3000);\r\n\t\t\t\t\t\tcorrectGuess = true; //this is needed to avoid counting the guess as incorrect and avoid a player change/swap\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {// this path is used if the guess is a consonant or a paid for vowel\r\n\t\t\t\t\t\tfor(var i=0; this.guessedCharacters.length >= i; i++) {//loops through the previously guessed characters that have been added to the array this.guessedCharacters\r\n\t\t\t\t\t\t\tif(this.guessedCharacters[i] === guess){ //checks if the guess has been guessed before\r\n\t\t\t\t\t\t\t\tthis.setState({message: \"Letter has already been guessed, please guess a different letter\"});\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {this.setState({message: \"\"})}, 3000);\r\n\t\t\t\t\t\t\t\treturn; // this prevents the for loop and function from continuing\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.guessedCharacters.length === i) {\r\n\t\t\t\t\t\t\t\tthis.guessedCharacters.push(guess); // this adds the guess to the guessed characters array\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (i=0; this.phraseCharacters.length > i; i++) {// this loops through the phrase and checks if the guess is correct or not\r\n\t\t\t\t\t\t\tif (guess === this.phraseCharacters[i]) {\r\n\t\t\t\t\t\t\t\tcorrectGuess = true;\r\n\t\t\t\t\t\t\t\tif(consonant) { // this checks if the guess is a consonant or vowel, if it's a consonant it will increment the players money or do nothing if it's a vowel, the cost of vowels is handled in selectVowel()\r\n\t\t\t\t\t\t\t\t\tplayerPoints[playerIndex] += this.state.selectedMoney;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// the following if statement will determin if the guess was correct or not by checking the var correctGuess, if the player has guessed correctly then the correctGuess variable would have been set to true in the\r\n\t\t\t\t// previous if statements. The point of this statement is to reduce the ammount of code used as the outcome code would have been used multiple times in statements above\r\n\t\t\t\tif(correctGuess||this.freePlay) { //this will be selected if the guess was correct and will continue with the current player and update their score\r\n\t\t\t\t\tthis.setState({money: playerPoints[playerIndex]});\r\n\t\t\t\t\tthis.spin = true;\r\n\t\t\t\t\tthis.refs.mysteryPhrase.revealCharacters(guess);\r\n\t\t\t\t\tletters = document.querySelectorAll(\".app-letters\");\r\n\t\t\t\t\tvar visibleLetters = 0;\r\n\t\t\t\t\tfor(var y = 0; letters.length > y; y++) {\r\n\t\t\t\t\t\tif(letters[y].classList.contains(\"app-visible-letters\")) {\r\n\t\t\t\t\t\t\tvisibleLetters++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(visibleLetters === letters.length) {\r\n\t\t\t\t\t\tplayerPoints[playerIndex] += 1000;\r\n\t\t\t\t\t\tthis.setState({money: playerPoints[playerIndex]});\r\n\t\t\t\t\t\tthis.refs.mysteryPhrase.selectPhrase();\r\n\t\t\t\t\t\tthis.setState({message: \"Entire word guessed!\"});\r\n\t\t\t\t\t\tsetTimeout(() => {this.setState({message: \"\"})}, 3000);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse { // this will be selected if the guess was incorrect and swap players\r\n\t\t\t\t\tthis.playerChange();\r\n\t\t\t\t}\r\n\t\t\t\t// this code only needs to run once and applies to all outcomes (except for the unpaid for vowels and letters that have already been guessed) so I added it at the end instead of littered multiple times in\r\n\t\t\t\t// the possible outcomes above\r\n\t\t\t\tthis.spin = true;\r\n\t\t\t\tthis.freePlay = false;// this sets the free play state to false to indicate free play has not been landed on, it is set to true in the wheel component when free play is landed on\r\n\t\t\t\tthis.setState({selectedMoney: 0});\r\n\t\t\t\tdocument.querySelector(\"#app-guess-input\").value = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(playerPoints[playerIndex] >= 25000) { // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\n\t\t\tthis.props.endGame(playerPoints, playerIndex);\r\n\t\t}\r\n\t}\r\n\t\r\n\tplayerState = state => {\r\n\t\tthis.spin = state;\r\n\t}\r\n\t\r\n\tshowVowels(expand) {\r\n\t\tif(expand) {\r\n\t\t\tdocument.querySelector(\"#vowel-button\").style.webkitTransitionDuration = \"0.5s\";\r\n\t\t\tdocument.querySelector(\"#vowel-button\").style.webkitTransform = \"width: 200px\";\r\n\t\t\tdocument.querySelector(\"#vowel-button\").style.width = \"200px\";\r\n\t\t\tdocument.querySelector(\"#app-vowel-button\").style.display = \"none\";\r\n\t\t\tfor(var v = 0; 5 > v; v++) {\r\n\t\t\t\tdocument.querySelectorAll(\".vowels\")[v].style.display = \"inline-block\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.querySelector(\"#vowel-button\").style.webkitTransitionDuration = \"0.5s\";\r\n\t\t\tdocument.querySelector(\"#vowel-button\").style.webkitTransform = \"width: 100px\";\r\n\t\t\tdocument.querySelector(\"#vowel-button\").style.width = \"100px\";\r\n\t\t\tdocument.querySelector(\"#app-vowel-button\").style.display = \"inline-block\";\r\n\t\t\tfor(v = 0; 5 > v; v++) {\r\n\t\t\t\tdocument.querySelectorAll(\".vowels\")[v].style.display = \"none\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//called when a vowel is guessed, event object made to trick check answer function into thinking a key was pressed.\r\n\tselectVowel(vowel) {\r\n\t\tvar event = {\r\n\t\t\t\twhich: 13,\r\n\t\t}\r\n\t\tfor(var e = 0; this.guessedCharacters.length > e; e++) {\r\n\t\t\tif(vowel === this.guessedCharacters[e]) {\r\n\t\t\t\tthis.setState({message: \"Letter has already been guessed, please guess a different letter\"});\r\n\t\t\t\tsetTimeout(() => {this.setState({message: \"\"})}, 3000);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this.freePlay) {\r\n\t\t\tthis.checkAnswer(event, vowel);\r\n\t\t}\r\n\t\telse if(playerPoints[playerIndex] >= 250) {\r\n\t\t\tplayerPoints[playerIndex] -= 250;\r\n\t\t\tthis.checkAnswer(event, vowel);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setState({message: \"Not enough money to purchase vowel\"});\r\n\t\t\tsetTimeout(() => {this.setState({message: \"\"})}, 3000);\r\n\t\t\tthis.showVowels(false);\r\n\t\t}\r\n\t}\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div id=\"app-content-container\">\r\n\t\t\t<div className=\"background\"></div>\r\n\t\t\t\t<div id=\"app-left-container\">\r\n\t\t\t\t\t<p id=\"app-money-won\">{\"$\" + this.state.selectedMoney}</p>\r\n\t\t\t\t\t<Wheel spin={state => {this.playerState(state)}} playerState={this.spin} playerPoints={this.changePoints} playerChange={this.playerChange} vowels={() => {this.showVowels(false)}} message={message => {this.updateMessage(message)}} />\r\n\t\t\t\t\t<p id=\"app-input-title\" >You can guess the full word at any time as long as the wheel has been span</p>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input placeholder=\"Guess a character here\" id=\"app-guess-input\" onKeyPress={event => this.checkAnswer(event)} />\r\n\t\t\t\t\t\t<div className=\"universal-buttons\" id=\"vowel-button\" >\r\n\t\t\t\t\t\t\t<button id=\"app-a-button\" className=\"app-vowel-buttons vowels\" onClick={() => {this.selectVowel(\"a\")}} >A</button>\r\n\t\t\t\t\t\t\t<button id=\"app-i-button\" className=\"app-vowel-buttons vowels\" onClick={() => {this.selectVowel(\"i\")}}>I</button>\r\n\t\t\t\t\t\t\t<button id=\"app-o-button\" className=\"app-vowel-buttons vowels\" onClick={() => {this.selectVowel(\"o\")}}>O</button>\r\n\t\t\t\t\t\t\t<button id=\"app-u-button\" className=\"app-vowel-buttons vowels\" onClick={() => {this.selectVowel(\"u\")}}>U</button>\r\n\t\t\t\t\t\t\t<button id=\"app-e-button\" className=\"app-vowel-buttons vowels\" onClick={() => {this.selectVowel(\"e\")}}>E</button>\r\n\t\t\t\t\t\t\t<button id=\"app-vowel-button\" className=\"app-vowel-buttons\" onClick={() => {this.showVowels(true)}}>Vowels</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p id=\"app-message-warning\">{this.state.message}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<MysteryPhrase name={this.currentPlayer} money={this.state.money} phrase={this.updatePhrase} ref=\"mysteryPhrase\" />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\n\r\nfunction Losers (props) {\r\n\t\treturn (\r\n\t\t\t<div key={props.id + \"l\"}>\r\n\t\t\t\t<h1 key={props.name + \"n\"}>{props.name}</h1>\r\n\t\t\t\t<h2 key={props.points + \"p\"}>{props.points}</h2>\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Losers;","import React from 'react';\r\nimport Losers from \"./Losers\"\r\nimport players from \".././index\";\r\nfunction generateLosers(loser) {\r\n\treturn <Losers name={loser.name} points={loser.points} id={loser.id} key={loser.id} />\r\n}\r\n\r\nclass EndScreen extends React.Component {\r\n\t\r\n\tpositions(names, points) {\r\n\t\tclass player {\r\n\t\t\tconstructor(name, points, id) {\r\n\t\t\t\tthis.name = name;\r\n\t\t\t\tthis.points = points;\r\n\t\t\t\tthis.id = id;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar players = [];\r\n\t\tfor(var i = 0; names.length > i; i++) {\r\n\t\t\tvar currentPlayer = new player(names[i], points[i], i);\r\n\t\t\tfor(var x = 0; players.length <= names.length; x++) {\r\n\t\t\t\tif(typeof players[x] === \"undefined\" || players[x].points < currentPlayer.points) {\r\n\t\t\t\t\tplayers.splice(x, 0, currentPlayer);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar element = <div>\r\n\t\t\t\t<h1 id=\"endScreen-wining-player-name\" key={\"1w\"} >{players[0].name}</h1>\r\n\t\t\t\t<h2 id=\"endScreen-wining-player-points\" key={\"2w\"} >${players[0].points}</h2>\r\n\t\t\t</div>\r\n\t\tplayers.shift()\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 id=\"endScreen-wining-header\" key={\"0w\"}>Winner!</h1>\r\n\t\t\t\t{element}\r\n\t\t\t\t{players.map(generateLosers)}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"background\">\r\n\t\t\t\t<div id=\"endScreen-container\">\r\n\t\t\t\t\t<div>{this.positions(players, this.props.points)}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default EndScreen;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Menu from './components/Menu';\r\nimport App from './components/App';\r\nimport EndScreen from './components/EndScreen';\r\n\r\nfunction startGame() {\r\n\tvar playerNames = document.querySelectorAll(\".menu-name-input\");\r\n\tvar namesString = \"\";\r\n\tfor (var i=0; 4 > i; i++){ \r\n\t\tnamesString += playerNames[i].value; \r\n\t}\r\n\tif(namesString === \"\") {\r\n\t\tplayerNames[0].style.webkitAnimation = \"incorrect-name-field 1s\";\r\n\t\tplayerNames[0].style.borderColor = \"#ff0000\";\r\n\t}\r\n\telse{\r\n\t\tfor (i=0; 4>i; i++) {\r\n\t\t\tif(playerNames[i].value !== \"\") {\r\n\t\t\t\tplayers.push(playerNames[i].value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tReactDOM.render(<App name={players} endGame={(points, playerIndex) => {endGame(points, playerIndex)}}/>, document.getElementById('root'));\r\n\t}\r\n}\r\n\r\nfunction endGame(points, playerIndex) {\r\n\tReactDOM.render(<EndScreen players={players} points={points} playerIndex={playerIndex} />, document.getElementById('root'));\r\n}\r\n\r\n\r\nfunction WheelOfFortune (props){\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Menu startGame={startGame} />\r\n\t\t</div>\r\n\t\t);\r\n\r\n};\r\n\r\nvar players = [];\r\n\r\nexport default players;\r\n\r\nReactDOM.render(<WheelOfFortune />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/wheel_of_fortune_logo.dee4e658.png\";"],"sourceRoot":""}